// import React, { useEffect, useState } from 'react';
// import $ from 'jquery';
// import 'datatables.net';
// // import 'datatables.net-dt/css/jquery.dataTables.css';

// const Userfeedback = () => {
//     const [editMode, setEditMode] = useState(false);

//     useEffect(() => {
//         const table = $('#patchTable').DataTable({
//             dom: 'lrtip',
//         });

//         $('#merge-btn').prop('disabled', true);
//         $('#delete-btn').prop('disabled', true);

//         $('#merge-btn').on('click', function () {
//             const selectedRows = table.rows('.selected').data().toArray();

//             if (selectedRows.length < 2) {
//                 alert('Please select at least two rows to merge.');
//                 return;
//             }

//             let concatenatedValue = "";

//             for (let i = 0; i < selectedRows.length; i++) {
//                 concatenatedValue += $(selectedRows[i][1]).val() + " ,";
//             }

            

//             const lowestSno = Math.min(...selectedRows.map(row => parseInt(row[0], 10)));

//             table.rows('.selected').remove();

//             const mergedRow = [
//                 lowestSno,
//                 `<input class="form-control edit-input readonly" value="${concatenatedValue}" />`,
//                 `<button class="btn btn-primary add-btn">Add</button>`,
//                 `<button class="btn btn-danger remove-btn">Remove</button>`
//             ];

//             table.row.add(mergedRow).draw();
//         });

//         $('#delete-btn').on('click', function () {
//             const selectedRows = table.rows('.selected').data().toArray();

//             if (selectedRows.length === 0) {
//                 alert('Please select rows to delete.');
//                 return;
//             }

//             table.rows('.selected').remove().draw();
//         });

//         $('#patchTable tbody').on('click', 'tr', function () {
//             $(this).toggleClass('selected');
//             const selectedRows = table.rows('.selected').data().length;

//             if (selectedRows >= 2) {
//                 $('#merge-btn').prop('disabled', false);
//             } else {
//                 $('#merge-btn').prop('disabled', true);
//             }

//             if (selectedRows > 0) {
//                 $('#delete-btn').prop('disabled', false);
//             } else {
//                 $('#delete-btn').prop('disabled', true);
//             }
//         });

//         $('#patchTable tbody').on('click', '.add-btn', function () {
//             const name = $(this).closest('tr').find('.edit-input').val();

//             if (name) {
//                 $('#selected-values').append(`<div class="card-item">${name}</div>`);
//                 $(this).closest('tr').remove();
//             }
//         });

//         $('#patchTable tbody').on('click', '.remove-btn', function () {
//             const row = $(this).closest('tr');
//             table.row(row).remove().draw();
//         });

//         $('#log-btn').on('click', function () {
//             const cardItems = $('.card-item');
//             const values = [];

//             cardItems.each(function () {
//                 values.push($(this).text());
//             });

//             console.log(values);
//         });


//         return () => {
//             table.destroy();
//         };
//     }, []);

//     return (
//         <div>
//             <p>hello</p>
//             <h1>idiot</h1>
//             <div className="form-check form-switch">
//                 <input
//                     className="form-check-input"
//                     type="checkbox"
//                     id="edit-toggle"
//                     checked={editMode}
//                     onChange={() => setEditMode(!editMode)}
//                 />
//                 <label className="form-check-label" htmlFor="edit-toggle">
//                     Toggle Edit
//                 </label>
//             </div>
//             <button id="merge-btn" className="btn btn-success mt-3" disabled>
//                 Merge
//             </button>
//             <button id="delete-btn" className="btn btn-danger mt-3" disabled>
//                 Delete
//             </button>
//             <div className="table-container">
//                 <table id="patchTable" className="table table-striped table-hover">
//                     <thead>
//                         <tr>
//                             <th>No.</th>
//                             <th>Name</th>
//                             <th>Add</th>
//                             <th>Remove</th>
//                         </tr>
//                     </thead>
//                     <tbody>
//                         <tr>
//                             <td>1</td>
//                             <td>
//                                 <input
//                                     type="text"
//                                     className={`form-control edit-input${editMode ? '' : ' readonly'}`}
//                                     defaultValue="Raju"
//                                     readOnly={!editMode}
//                                 />
//                             </td>
//                             <td>
//                                 <button className="btn btn-primary add-btn">Add</button>
//                             </td>
//                             <td>
//                                 <button className="btn btn-danger remove-btn">Remove</button>
//                             </td>
//                         </tr>
//                         <tr>
//                             <td>2</td>
//                             <td>
//                                 <input
//                                     type="text"
//                                     className={`form-control edit-input${editMode ? '' : ' readonly'}`}
//                                     defaultValue="Ram"
//                                     readOnly={!editMode}
//                                 />
//                             </td>
//                             <td>
//                                 <button className="btn btn-primary add-btn">Add</button>
//                             </td>
//                             <td>
//                                 <button className="btn btn-danger remove-btn">Remove</button>
//                             </td>
//                         </tr>
//                         <tr>
//                             <td>3</td>
//                             <td>
//                                 <input
//                                     type="text"
//                                     className={`form-control edit-input${editMode ? '' : ' readonly'}`}
//                                     defaultValue="Rahul"
//                                     readOnly={!editMode}
//                                 />
//                             </td>
//                             <td>
//                                 <button className="btn btn-primary add-btn">Add</button>
//                             </td>
//                             <td>
//                                 <button className="btn btn-danger remove-btn">Remove</button>
//                             </td>
//                         </tr>
//                         <tr>
//                             <td>4</td>
//                             <td>
//                                 <input
//                                     type="text"
//                                     className={`form-control edit-input${editMode ? '' : ' readonly'}`}
//                                     defaultValue="Ravi"
//                                     readOnly={!editMode}
//                                 />
//                             </td>
//                             <td>
//                                 <button className="btn btn-primary add-btn">Add</button>
//                             </td>
//                             <td>
//                                 <button className="btn btn-danger remove-btn">Remove</button>
//                             </td>
//                         </tr>
//                     </tbody>
//                 </table>
//             </div>
//             <div className="card-container">
//                 <div className="card">
//                     <div className="card-header">Selected Values</div>
//                     <div className="card-body" id="selected-values"></div>
//                 </div>
//             </div>
//             <button id="log-btn" className="btn btn-info mt-3">
//                 Log
//             </button>
//         </div>
//     );
// };

// export default Userfeedback;











// // import React, { useEffect, useState } from 'react';
// // import axios from 'axios';

// // const UserFeedback = () => {
// //     const [reports, setReports] = useState([]);
// //     const [editMode, setEditMode] = useState(false);

// //     useEffect(() => {
// //         const fetchReports = async () => {
// //             try {
// //                 const response = await axios.get('http://localhost:5000/api/reporteddetails');
// //                 const data = response.data;
// //                 setReports(data);
// //             } catch (error) {
// //                 console.error('Error fetching reports:', error);
// //             }
// //         };

// //         fetchReports();
// //     }, []);

// //     const handleStatusChange = async (reportId) => {
// //         try {
// //             await axios.put(`http://localhost:5000/api/reporteddetails/${reportId}`, { status: 'used' });
// //             setReports((prevReports) =>
// //                 prevReports.map((report) =>
// //                     report._id === reportId ? { ...report, status: 'used' } : report
// //                 )
// //             );
// //             alert('Status updated successfully.');
// //         } catch (error) {
// //             console.error('Error updating status:', error);
// //         }
// //     };



// //     const handleTextAreaChange = (reportId, field, event) => {
// //         const value = event.target.value;
// //         setReports((prevReports) =>
// //             prevReports.map((report) =>
// //                 report._id === reportId ? { ...report, [field]: value } : report
// //             )
// //         );
// //     };

// //     const handleOutput = (bugs, features) => {
// //         console.log([bugs.toString()]);
// //         console.log([features.toString()]);
// //     };

// //     return (
// //         <div>

// //             {reports.map((report) => (
// //                 report.status === 'notused' && (
// //                     <div key={report._id} className="card mb-3">
// //                         <div className='card-header'>
// //                             <h5 >Username: {report.username}</h5>



// //                         </div>
// //                         <div className="card-body">

// //                             <div className="form-check form-switch end-0 ">
// //                                 <input
// //                                     className="form-check-input"
// //                                     type="checkbox"
// //                                     id="edit-toggle"
// //                                     checked={editMode}
// //                                     onChange={() => setEditMode(!editMode)}
// //                                 />
// //                                 <h5 className=''>Edit</h5>
// //                             </div>


// //                             <div className="form-floating">
// //                                 <h6>Bugs Reported:</h6>
// //                                 <textarea
// //                                     className={`form-control edit-input${editMode ? '' : 'readonly'}`}
// //                                     rows="5"
// //                                     value={report.bugs_reported}
// //                                     onChange={(event) => handleTextAreaChange(report._id, 'bugs_reported', event)}
// //                                     readOnly={!editMode}

// //                                 ></textarea>
// //                             </div>
// //                             <div className="form-floating">
// //                                 <h6>Requested Features:</h6>
// //                                 <textarea
// //                                     className={`form-control edit-input${editMode ? '' : 'readonly'}`}
// //                                     rows="5"
// //                                     value={report.requested_features}
// //                                     onChange={(event) => handleTextAreaChange(report._id, 'requested_features', event)}
// //                                     readOnly={!editMode}

// //                                 ></textarea>
// //                             </div>
// //                             <div>Status: {report.status}</div>

// //                             <button className="btn btn-primary mt-2 mx-2" onClick={() => handleStatusChange(report._id)}>
// //                                 Submit it
// //                             </button>
// //                             <button className="btn btn-primary mt-2 mx-2" onClick={() => handleOutput(report.bugs_reported, report.requested_features)}>
// //                                 Get Data
// //                             </button>

// //                         </div>
// //                     </div>
// //                 )
// //             ))}
// //         </div>
// //     );
// // };

// // export default UserFeedback;





// import React, { useEffect, useState } from 'react';
// import axios from 'axios';

// const UserFeedback = () => {
//     const [reports, setReports] = useState([]);
//     const [editMode, setEditMode] = useState(false);

//     useEffect(() => {
//         const fetchReports = async () => {
//             try {
//                 const response = await axios.get('http://localhost:5000/api/reporteddetails');
//                 const data = response.data;
//                 setReports(data);
//             } catch (error) {
//                 console.error('Error fetching reports:', error);
//             }
//         };

//         fetchReports();
//     }, []);

//     const handleStatusChange = async (reportId) => {
//         try {
//             await axios.put(`http://localhost:5000/api/reporteddetails/${reportId}`, { status: 'used' });
//             setReports((prevReports) =>
//                 prevReports.map((report) =>
//                     report._id === reportId ? { ...report, status: 'used' } : report
//                 )
//             );
//             alert('Status updated successfully.');
//         } catch (error) {
//             console.error('Error updating status:', error);
//         }
//     };

//     const handleTextAreaChange = (reportId, field, event) => {
//         const value = event.target.value;
//         setReports((prevReports) =>
//             prevReports.map((report) =>
//                 report._id === reportId ? { ...report, [field]: value } : report
//             )
//         );
//     };

//     const handleOutput = (bugs, features) => {
//         console.log([bugs.toString()]);
//         console.log([features.toString()]);
//     };

//     return (
//         <div>
//             <div className="container mt-4">
//                 <div className="accordion" id="accordionExample">
//                     {reports.map((report, index) => (
//                         report.status === 'notused' && (
//                             <div className="accordion-item" key={report._id}>
//                                 <h2 className="accordion-header" id={`heading${index}`}>
//                                     <button
//                                         className="accordion-button"
//                                         type="button"
//                                         data-bs-toggle="collapse"
//                                         data-bs-target={`#collapse${index}`}
//                                         aria-expanded={index === 0 ? 'true' : 'false'}
//                                         aria-controls={`collapse${index}`}
//                                     >
//                                         Username: {report.username}
//                                     </button>
//                                 </h2>
//                                 <div
//                                     id={`collapse${index}`}
//                                     className={`accordion-collapse collapse ${index === 0 ? 'show' : ''}`}
//                                     aria-labelledby={`heading${index}`}
//                                     data-bs-parent="#accordionExample"
//                                 >
//                                     <div className="accordion-body">
//                                         <div className="form-check form-switch end-0 ">
//                                             <input
//                                                 className="form-check-input"
//                                                 type="checkbox"
//                                                 id="edit-toggle"
//                                                 checked={editMode}
//                                                 onChange={() => setEditMode(!editMode)}
//                                             />
//                                             <h5 className=''>Edit</h5>
//                                         </div>
//                                         <div className="form-floating">
//                                             <h6>Bugs Reported:</h6>
//                                             <textarea
//                                                 className={`form-control edit-input${editMode ? '' : 'readonly'}`}
//                                                 rows="5"
//                                                 value={report.bugs_reported}
//                                                 onChange={(event) => handleTextAreaChange(report._id, 'bugs_reported', event)}
//                                                 readOnly={!editMode}
//                                             ></textarea>
//                                         </div>
//                                         <div className="form-floating">
//                                             <h6>Requested Features:</h6>
//                                             <textarea
//                                                 className={`form-control edit-input${editMode ? '' : 'readonly'}`}
//                                                 rows="5"
//                                                 value={report.requested_features}
//                                                 onChange={(event) => handleTextAreaChange(report._id, 'requested_features', event)}
//                                                 readOnly={!editMode}
//                                             ></textarea>
//                                         </div>
//                                         <div>Status: {report.status}</div>
//                                         <button className="btn btn-primary mt-2 mx-2" onClick={() => handleStatusChange(report._id)}>
//                                             Submit it
//                                         </button>
//                                         <button className="btn btn-primary mt-2 mx-2" onClick={() => handleOutput(report.bugs_reported, report.requested_features)}>
//                                             Get Data
//                                         </button>
//                                     </div>
//                                 </div>
//                             </div>
//                         )
//                     ))}
//                 </div>
//             </div>
//         </div>
//     );
// };

// export default UserFeedback;